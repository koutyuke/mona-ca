/* do not change this file, it is auto generated by storybook. */

import { getProjectAnnotations, prepareStories, start } from "@storybook/react-native";

import "@storybook/addon-ondevice-controls/register";
import "@storybook/addon-ondevice-actions/register";

const normalizedStories = [
	{
		titlePrefix: "app - mobile",
		directory: "../mobile/src",
		files: "**/*.story.?(ts|tsx)",
		importPathMatcher: /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.story\.(?:ts|tsx)?)$/,
		// @ts-ignore
		req: require.context(
			"../../../mobile/src",
			true,
			/^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.story\.(?:ts|tsx)?)$/,
		),
	},
];

declare global {
	var view: ReturnType<typeof start>;
	var STORIES: typeof normalizedStories;
}

const annotations = [
	require("./preview"),
	require("@storybook/react-native/dist/preview"),
	require("@storybook/addon-actions/preview"),
];

global.STORIES = normalizedStories;

// @ts-ignore
module?.hot?.accept?.();

if (!global.view) {
	global.view = start({
		annotations,
		storyEntries: normalizedStories,
	});
} else {
	const { importMap } = prepareStories({ storyEntries: normalizedStories });

	global.view._preview.onStoriesChanged({
		importFn: async (importPath: string) => importMap[importPath],
	});

	global.view._preview.onGetProjectAnnotationsChanged({
		getProjectAnnotations: getProjectAnnotations(global.view, annotations),
	});
}

export const view = global.view;
