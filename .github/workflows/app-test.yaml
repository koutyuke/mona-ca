name: APP-TEST

on: 
  - push

env:
  BUN_VERSION: 1.1.4

jobs:
  install:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-
      
      - name: install
        run: bun install --frozen-lockfile
  
  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-

      - name: cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-bun-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-bun-build-
      
      - name: install
        run: bun install --frozen-lockfile

      - name: lint
        run: bun run lint

  format:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-

      - name: cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-bun-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-bun-build-
      
      - name: install
        run: bun install --frozen-lockfile

      - name: format
        run: bun run fmt
    
  build_and_test:
    needs:
      - format
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-
      
      - name: cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-bun-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-bun-build-

      - name: install
        run: bun install --frozen-lockfile
      
      - name: test
        run: bun run test

  status:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: ${{ ! failure() }}
    steps:
      - name: check
        run: echo "test is successfully executed."