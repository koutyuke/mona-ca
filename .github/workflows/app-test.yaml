name: App-Test

on: 
  - push

jobs:
  install:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-
      
      - name: install
        run: bun install --frozen-lockfile
  
  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-

      - name: cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-bun-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-bun-build-
      
      - name: install
        run: bun install --frozen-lockfile

      - name: lint
        run: bun run lint

  format:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-

      - name: cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-bun-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-bun-build-
      
      - name: install
        run: bun install --frozen-lockfile

      - name: format
        run: bun run fmt

  type-check:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-

      - name: cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-bun-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-bun-build-
      
      - name: install
        run: bun install --frozen-lockfile

      - name: format
        run: bun run type-check
    
  test:
    needs:
      - format
      - lint
      - type-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-
      
      - name: cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-bun-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-bun-build-

      - name: set api env file path
        run: echo "API_ENV_FILE_PATH=$(pwd)/apps/api/.dev.vars.test" >> $GITHUB_ENV
        
      - name: setup api environment variables
        run: |
          echo "DISCORD_CLIENT_ID=DISCORD_CLIENT_ID" >> ${{env.API_ENV_FILE_PATH}}
          echo "DISCORD_CLIENT_SECRET=DISCORD_CLIENT_SECRET" >> ${{env.API_ENV_FILE_PATH}}
          echo "GOOGLE_CLIENT_ID=GOOGLE_CLIENT_ID" >> ${{env.API_ENV_FILE_PATH}}
          echo "GOOGLE_CLIENT_SECRET=GOOGLE_CLIENT_SECRET" >> ${{env.API_ENV_FILE_PATH}}
          echo "RESEND_NOREPLY_EMAIL_API_KEY" >> ${{env.RESEND_DEFAULT_EMAIL_API_KEY}}

      - name: install
        run: bun install --frozen-lockfile
      
      - name: test
        run: bun run test
    
  build:
    needs:
      - format
      - lint
      - type-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT
  
      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-
      
      - name: cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-bun-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-bun-build-

      - name: install
        run: bun install --frozen-lockfile
      
      - name: build
        run: bun run build

  status:
    runs-on: ubuntu-latest
    needs: 
      - test
      - build
    if: ${{ ! failure() }}
    steps:
      - name: check
        run: echo "test is successfully executed."